#!/bin/bash
#SBATCH --job-name=s1_s1-7B_gptq-int4
#SBATCH --partition=a100
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --gpus=1
#SBATCH --time=3-00:00:00
#SBATCH --output=logs/s1.1-7B_gptq-int4_output.log
#SBATCH --error=logs/s1.1-7B_gptq-int4_error.log

set -euo pipefail
trap 'echo "❌ 脚本失败: 行号 $LINENO, 状态码 $?"' ERR

echo "📌 SLURM job started on: $(hostname)"
echo "📅 Date: $(date)"

# ✅ 模型与任务设置
MODEL_ID="s1.1-7B-gptq-int4"
MODEL_LOCAL="models/${MODEL_ID}"  # 本地模型路径
TASK_LIST=("aime24_nofigures" "gpqa_diamond_openai")

DEF_PATH="/mnt/fast/nobackup/scratch4weeks/ly0008/ysh/s1/apptainer.def"
SIF_PATH="/mnt/fast/nobackup/scratch4weeks/ly0008/ysh/s1/s1.sif"
RESULTS_LOCAL="results/${MODEL_ID}"
RESULTS_IN_CONTAINER="/workspace/results/${MODEL_ID}"

mkdir -p "$RESULTS_LOCAL"

# ✅ 读取 HF token（gated dataset 必须要）
HF_TOKEN=$(<.hf_token)
if [ -z "$HF_TOKEN" ]; then
  echo "❌ .hf_token 文件为空或不存在，请创建该文件并填入 Hugging Face token"
  exit 1
fi

# ✅ 检查模型路径
if [ ! -f "${MODEL_LOCAL}/config.json" ]; then
  echo "❌ 模型路径无效：${MODEL_LOCAL}/config.json 未找到"
  exit 1
fi

# ✅ 检查并构建镜像
if [ -f "$SIF_PATH" ]; then
  echo "✅ 容器镜像已存在: $SIF_PATH，跳过构建。"
else
  echo "🚧 开始构建镜像: $SIF_PATH"
  apptainer build --fakeroot "$SIF_PATH" "$DEF_PATH" || {
    echo "❌ 容器构建失败"
    exit 1
  }
fi

# ✅ 推理任务
for k in 512 1024 2048 4096 8192; do
  for task in "${TASK_LIST[@]}"; do
    SUBDIR="${MODEL_ID}_${k}/${task}"
    OUT_DIR="${RESULTS_LOCAL}/${SUBDIR}/${MODEL_ID}"
    echo "🚀 推理任务：task=${task}, max_tokens_thinking=${k}"

    apptainer exec --nv \
      --env HF_TOKEN=$HF_TOKEN \
      --bind "$MODEL_LOCAL:/workspace/model" \
      --bind results:/workspace/results \
      "$SIF_PATH" bash -c "
        set -euo pipefail
        huggingface-cli login --token \$HF_TOKEN
        cd /opt/app/s1

        mkdir -p /workspace/results/${SUBDIR}/${MODEL_ID}

        lm_eval \
          --model vllm \
          --model_args pretrained=/workspace/model,dtype=float16,tensor_parallel_size=1 \
          --tasks ${task} \
          --output_path /workspace/results/${SUBDIR}/${MODEL_ID} \
          --log_samples \
          --apply_chat_template \
          --gen_kwargs \"max_gen_toks=32768,max_tokens_thinking=${k}\"
      "

    echo "✅ 已完成 task=${task}, k=${k}，结果保存在：${OUT_DIR}"
  done
done

echo "🎉 所有任务完成。全部结果在：$RESULTS_LOCAL/"